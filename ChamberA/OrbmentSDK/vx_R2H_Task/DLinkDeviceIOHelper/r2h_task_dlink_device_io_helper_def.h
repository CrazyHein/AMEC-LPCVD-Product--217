/*
 * r2h_task_dlink_device_io_helper_def.h
 *
 *  Created on: 2018-8-25
 *      Author: CrazyHein
 */

#ifndef R2H_TASK_DLINK_DEVICE_IO_HELPER_DEF_H_
#define R2H_TASK_DLINK_DEVICE_IO_HELPER_DEF_H_

#include "../r2h_task_data_type.h"
/*
typedef enum R2H_TASK_DLINK_DEVICE_IDENTIFICATION
{
	R2H_TASK_DLINK_RX42C4						= 0x0001,
	R2H_TASK_DLINK_RY42NT2P						= 0x0002,
	
	R2H_TASK_DLINK_GENERIC_DISCRETE_IN_16P		= 0x0001,
	R2H_TASK_DLINK_GENERIC_DISCRETE_IN_32P		= 0x0002,
	R2H_TASK_DLINK_GENERIC_DISCRETE_IN_64P		= 0x0003,
	R2H_TASK_DLINK_GENERIC_DISCRETE_OUT_16P		= 0x0004,
	R2H_TASK_DLINK_GENERIC_DISCRETE_OUT_32P		= 0x0005,
	R2H_TASK_DLINK_GENERIC_DISCRETE_OUT_64P		= 0x0006,
	
	R2H_TASK_DLINK_R60AD4						= 0x0020,
	R2H_TASK_DLINK_R60ADV8						= 0x0021,
	R2H_TASK_DLINK_R60ADI8						= 0x0022,
	
	R2H_TASK_DLINK_R60DA4						= 0x0023,
	R2H_TASK_DLINK_R60DAV8						= 0x0024,
	R2H_TASK_DLINK_R60DAI8						= 0x0025,
	

	
	
	R2H_TASK_DLINK_UNKNOWN_DEVICE				= 0xFFFF,
	__R2H_TASK_DLINK_DEVICE_IDENTIFICATION		= 0xFFFFFFFF
}R2H_TASK_DLINK_DEVICE_IDENTIFICATION_T;
*/
typedef enum R2H_TASK_DLINK_DEVICE_HELPER_PARAM
{
	R2H_TASK_DLINK_DEVICE_HELPER_REFRESH_ALL 			= 0x00000001,
	R2H_TASK_DLINK_DEVICE_HELPER_REFRESH_OPTIMIZE 		= 0x00000002,
	
	R2H_TASK_DLINK_DEVICE_HELPER_STRUCT					= 0x80000000,
	__R2H_TASK_DLINK_DEVICE_HELPER_PARAM = 0xFFFFFFFF
}R2H_TASK_DLINK_DEVICE_HELPER_PARAM_T;

typedef enum R2H_TASK_DLINK_DEVICE_TYPE
{
	R2H_TASK_DLINK_DISCRETE_IN					= 0x0101,
	R2H_TASK_DLINK_DISCRETE_OUT					= 0x0100,
	R2H_TASK_DLINK_DISCRETE_MIX					= 0x0102,
	R2H_TASK_DLINK_ANALOG_IN					= 0x0201,
	R2H_TASK_DLINK_ANALOG_OUT					= 0x0200,
	R2H_TASK_DLINK_TEMPERATURE_IN				= 0x0203,
	R2H_TASK_DLINK_TEMPERATURE_CTL				= 0x0204,
	
	R2H_TASK_DLINK_DEVICENET_MASTER				= 0x0300,
	R2H_TASK_DLINK_DEVICENET_SLAVE				= 0x0301,
	R2H_TASK_DLINK_DEVICENET_MS					= 0x0302,
	R2H_TASK_DLINK_ETHERCAT_MASTER				= 0x0310,
	
	R2H_TASK_DLINK_SMART_GATEWAY				= 0x8000,
	R2H_TASK_DLINK_SERIAL_PORT_SERVER			= 0x8001,
	
	R2H_TASK_DLINK_GENERAL_SOFT_CCPU_M			= 0x1000,
	R2H_TASK_DLINK_GENERAL_SOFT_CCPU_SM			= 0x1001,
	R2H_TASK_DLINK_GENERAL_SOFT_CCPU_D			= 0x1002,
	R2H_TASK_DLINK_GENERAL_SOFT_CCPU_SD			= 0x1003,
	R2H_TASK_DLINK_GENERAL_SOFT_CCPU_B			= 0x1004,
	R2H_TASK_DLINK_GENERAL_SOFT_CCPU_W			= 0x1005,
	R2H_TASK_DLINK_GENERAL_SOFT_CCPU_ZR			= 0x1006,
	
	R2H_TASK_DLINK_UNKNOWN_DEVICE_TYPE			= 0xFFFF,
	__R2H_TASK_DLINK_DEVICE_TYPE				= 0xFFFFFFFF
}R2H_TASK_DLINK_DEVICE_TYPE_T;

typedef enum R2H_TASK_DLINK_DEVICE_SIDE_CHANNEL
{
	DISCRETE_IN_TX_BIT				= 0x0001,
	DISCRETE_IN_TX_WORD				= 0x0002,
	
	DISCRETE_OUT_RX_BIT				= 0x8001,
	DISCRETE_OUT_RX_WORD			= 0x8002,
	
	ANALOG_IN_TX_CHANNEL			= 0x0010,
	
	ANALOG_OUT_RX_CHANNEL			= 0x8011,
	
	TEMPERATURE_IN_TX_CHANNEL		= 0x0021,
	
	TEMPERATURE_CTL_TX_PV			= 0x0031,
	TEMPERATURE_CTL_TX_MVh			= 0x0032,
	TEMPERATURE_CTL_TX_MVc			= 0x0033,
	TEMPERATURE_CTL_TX_SV			= 0x0034,
	
	TEMPERATURE_CTL_RX_MANUAL_MV	= 0x8031,
	TEMPERATURE_CTL_RX_SV			= 0x8032,
	TEMPERATURE_CTL_RX_ANALOG_PV	= 0x8033,
	
	DNET91_TX_RAW					= 0x0041,
	DNET91_TX_BIT_AREA				= 0x0042,
	DNET91_TX_NODE_CFG				= 0x0043,
	DNET91_TX_NODE_DIAG				= 0x0044,
	DNET91_TX_NODE_IO_COM			= 0x0045,
	DNET91_TX_NODE_IO_ERR			= 0x0046,
	DNET91_TX_NODE_WCFG				= 0x0047,
	DNET91_TX_NODE_WDIAG			= 0x0048,
	DNET91_TX_NODE_IO_WCOM			= 0x0049,
	DNET91_TX_NODE_IO_WERR			= 0x004A,
	DNET91_TX_BYTE					= 0x004B,
	DNET91_TX_SBYTE					= 0x004C,
	DNET91_TX_SHORT					= 0x004D,
	DNET91_TX_USHORT				= 0x004E,
	DNET91_TX_INT					= 0x004F,
	DNET91_TX_UINT					= 0x0050,
	DNET91_TX_FLOAT					= 0x0051,
	DNET91_TX_DOUBLE				= 0x0052,
	DNET91_TX_FP3201				= 0x0053,
	DNET91_TX_FP3202				= 0x0054,
	
	DNET91_RX_RAW					= 0x8041,
	DNET91_RX_BIT_AREA				= 0x8042,
	DNET91_RX_BYTE					= 0x8043,
	DNET91_RX_SBYTE					= 0x8044,
	DNET91_RX_SHORT					= 0x8045,
	DNET91_RX_USHORT				= 0x8046,
	DNET91_RX_INT					= 0x8047,
	DNET91_RX_UINT					= 0x8048,
	DNET91_RX_FLOAT					= 0x8049,
	DNET91_RX_DOUBLE				= 0x804A,
	DNET91_RX_FP3201				= 0x804B,
	DNET91_RX_FP3202				= 0x804C,

	SMART_ECAT_TX_RAW				= 0x0061,
	SMART_ECAT_TX_BIT_AREA			= 0x0062,
	SMART_ECAT_TX_NET_SLV			= 0x0063,
	SMART_ECAT_TX_NET_CFG			= 0x0064,
	SMART_ECAT_TX_NET_IO_COM		= 0x0065,
	SMART_ECAT_TX_NET_LP			= 0x0066,
	SMART_ECAT_TX_NET_MLP			= 0x0067,
	SMART_ECAT_TX_NET_EVT			= 0x0068,
	SMART_ECAT_TX_SLV_INFO			= 0x0069,
	
	SMART_ECAT_RX_RAW				= 0x8061,
	SMART_ECAT_RX_BIT_AREA			= 0x8062,
	
	
	SMART_GATEWAY_TX_BIT_AREA		= 0x0071,
	SMART_GATEWAY_TX_RAW			= 0x0072,
	SMART_GATEWAY_TX_NODE_CFG		= 0x0073,
	SMART_GATEWAY_TX_NODE_IO_COM	= 0x0074,
	SMART_GATEWAY_TX_NODE_WCFG		= 0x0075,
	SMART_GATEWAY_TX_NODE_IO_WCOM	= 0x0076,
	
	SMART_GATEWAY_RX_RAW			= 0x8071,
	SMART_GATEWAY_RX_BIT_AREA		= 0x8072,
	
	SERIAL_PSEV_TX_RAW				= 0x0080,
	SERIAL_PSEV_TX_BIT_AREA			= 0x0081,
	SERIAL_PSEV_TX_SLV_EXP			= 0x0082,
	SERIAL_PSEV_TX_MST_EXP			= 0x0083,
	
	SERIAL_PSEV_RX_RAW				= 0x8080,
	SERIAL_PSEV_RX_BIT_AREA			= 0x8081,
	
	SOFT_CCPU_RX_RAW				= 0x0081,
	SOFT_CCPU_RX_BIT_AREA			= 0x0082,
	
	SOFT_CCPU_TX_RAW				= 0x8081,
	SOFT_CCPU_TX_BIT_AREA			= 0x8082,
}R2H_TASK_DLINK_DEVICE_SIDE_CHANNEL_T;

typedef enum R2H_TASK_DLINK_DEVICE_SIDE_DATA_TYPE
{
	SIDE_DATA_TYPE_NONE				= 0xFFFF,
	SIDE_DATA_TYPE_BIT				= 0x0001,
	SIDE_DATA_TYPE_BYTE				= 0x0002,
	SIDE_DATA_TYPE_SBYTE			= 0x0003,
	SIDE_DATA_TYPE_SHORT			= 0x0004,
	SIDE_DATA_TYPE_USHORT			= 0x0005,
	SIDE_DATA_TYPE_INT				= 0x0006,
	SIDE_DATA_TYPE_UINT				= 0x0007,
	SIDE_DATA_TYPE_FLOAT			= 0x0008,
	SIDE_DATA_TYPE_DOUBLE			= 0x0009,
	
	SIDE_DATA_TYPE_FP3201			= 0x000A,
	SIDE_DATA_TYPE_FP3202			= 0x000B,
	SIDE_DATA_TYPE_FP6401			= 0x000C,
	SIDE_DATA_TYPE_FP6402			= 0x000D,
	SIDE_DATA_TYPE_FP6404			= 0x000E,
	
	SIDE_DATA_TYPE_FINGERPRINT		= 0x000F,
	
	SIDE_DATA_TYPE_ECT_CIA402_DEFAULT_TX			= 0x0010,
	SIDE_DATA_TYPE_ECT_CIA402_DEFAULT_RX			= 0x0011,
	
	SIDE_DATA_TYPE_DN_DEVICENET_MFC_DEFAULT_TX		= 0x0012,
	SIDE_DATA_TYPE_DN_DEVICENET_MFC_DEFAULT_RX		= 0x0013,
	SIDE_DATA_TYPE_DN_DEVICENET_UPC_DEFAULT_TX		= 0x0014,
	SIDE_DATA_TYPE_DN_DEVICENET_UPC_DEFAULT_RX		= 0x0015,
	SIDE_DATA_TYPE_DN_DEVICENET_FRC_DEFAULT_TX		= 0x0016,
	SIDE_DATA_TYPE_DN_DEVICENET_FRC_DEFAULT_RX		= 0x0017,
}R2H_TASK_DLINK_DEVICE_SIDE_DATA_TYPE_T;

typedef struct R2H_TASK_DLINK_DEVICE_SIDE_BAND
{
	R2H_TASK_DLINK_DEVICE_SIDE_CHANNEL_T channel;
	R2H_TASK_DLINK_DEVICE_SIDE_DATA_TYPE_T data_type;
	R2H_INT32 index;
	union
	{
		struct
		{
			R2H_INT32 bit_index;
		};
		struct
		{
			R2H_DOUBLE up_scale;
			R2H_DOUBLE down_scale;
		};
	};
	void *pData;
}R2H_TASK_DLINK_DEVICE_SIDE_BAND_T;

#endif /* R2H_TASK_DLINK_DEVICE_IO_HELPER_DEF_H_ */
